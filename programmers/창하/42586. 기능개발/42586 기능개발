function solution(progresses, speeds) {
    //완료 시간 배열
    let st = [];
    //정답 배열
    let answer = [];
    //st배열에 완료시간 할당
    for(let i=0; i < progresses.length; i++){
        st.push(Math.ceil((100 - progresses[i]) / speeds[i]))
    }
    //현재 완료시간
    let temp = st[0];
    //배포 횟수
    let count = 0;

    //완료시간 배열을 순회
    for(let i=0; i < st.length; i++){
        //temp에 저장된 시간보다 현재의 완료시간이 적을경우 배포 횟수 증가
        if( st[i] <= temp)
            count++;
        //temp에 저장된 시간보다 현재의 완료시간이 적을경우 이전의 배포 횟수를 정답 배열에 저장
        //배포 횟수를 1로 초기화 및 현재의 값을 temp에 저장
        else{
            answer.push(count);
            temp = st[i];
            count = 1;
        }
    }

    //마지막 시간을 넣어줌
    answer.push(progresses.length - answer.reduce((acc,cur) => acc + cur,0));

    return answer;
}